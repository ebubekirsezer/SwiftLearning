//
//  HomeViewController.swift
//  StarWarsApp
//
//  Created by Ebubekir Sezer on 6.04.2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HomeDisplayLogic: class
{
    func displayCharacters(viewModel: Home.StarWars.ViewModel)
}

class HomeViewController: UIViewController, UITableViewDelegate, UITableViewDataSource, HomeDisplayLogic
{
    @IBOutlet private weak var tableView: UITableView? {
        didSet {
            tableView?.delegate = self
            tableView?.dataSource = self
        }
    }
    
    
    var interactor: HomeBusinessLogic?
    
    var router: (NSObjectProtocol & HomeRoutingLogic & HomeDataPassing)?
    
    var displayedCharacters: [Home.StarWars.ViewModel.DisplayedCharacters] = []
    
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = HomeInteractor()
        let presenter = HomePresenter()
        let router = HomeRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        getCharacters()
    }
    
    func getCharacters() {
        let request = Home.StarWars.Request()
        interactor?.getCharacters(request: request)
    }
    
    func displayCharacters(viewModel: Home.StarWars.ViewModel)
    {
        displayedCharacters = viewModel.displayedCharacters
        tableView?.reloadData()
    }
    
    //MARK: - Table View
    func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return displayedCharacters.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "CharacterCell") ?? UITableViewCell()
        let character = displayedCharacters[indexPath.row]
        cell.textLabel?.text = character.name
        cell.detailTextLabel?.text = character.birthYear
        
        return cell
    }
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
    }
}
